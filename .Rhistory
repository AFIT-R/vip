?randomForest::importance
library(randomForest)
fit1 <- randomForest(Species ~ ., data = iris)
fit2 <- randomForest(Species ~ ., data = iris, importance = TRUE)
importance(fit1)
importance(fit2)
caret:::varImpDependencies("lm")
data(boston, package = "pdp")
fit <- lm(cmedv ~ ., data = bosotn)
fit <- lm(cmedv ~ ., data = boston)
z <- summary(fit)
z$coefficients
z$coefficients[, "t value"]
z$coefficients[-1, "t value"]
tibble::as.tibble(z$coefficients[-1, "t value"])
tibble::as.tibble(z$coefficients)
tibble::as.tibble(as.data.frame(z$coefficients))
as.data.frame(z$coefficients)
library(vip)
vi(fit)
source('C:/Users/greenweb/Desktop/devel/vip/R/vi.R', echo=TRUE)
vi(fit)
z
z$coefficients[, "t vals"]
colnames(z$coefficients)
source('C:/Users/greenweb/Desktop/devel/vip/R/vi.R', echo=TRUE)
vi(fit)
fit$terms
attr(fit, "intercept") == 1
attr(fit, "intercept")
?attr
attr(fit$terms, "intercept")
vi.lm <- function(object, type = NULL, class = NULL, scale = TRUE) {
coefs <- summary(object)$coefficients
if (attr(object$terms, "intercept") == 1) {
coefs <- coefs[-1, ]
}
preds <- rownames(coefs)
imp <- abs(coefs[, "t value"])
tibble::tibble("Variable" = preds, "Importance" = imp)
}
vi.lm <- function(object) {
coefs <- summary(object)$coefficients
if (attr(object$terms, "intercept") == 1) {
coefs <- coefs[-1, ]
}
preds <- rownames(coefs)
imp <- abs(coefs[, "t value"])
tibble::tibble("Variable" = preds, "Importance" = imp)
}
vi(fit)
?tibble::tibble
?order
source('C:/Users/greenweb/Desktop/devel/vip/R/vi.R', echo=TRUE)
vi(fit)
#' @export
vi.lm <- function(object) {
coefs <- summary(object)$coefficients
if (attr(object$terms, "intercept") == 1) {
coefs <- coefs[-1, ]
}
preds <- rownames(coefs)
imp <- abs(coefs[, "t value"])
preds <- preds[order(imp, decreasing = FALSE)]
tibble::tibble("Variable" = preds, "Importance" = sort(imp))
}
vi(fit)
?sort
source('C:/Users/greenweb/Desktop/devel/vip/R/vi.R', echo=TRUE)
vi(fit)
library(vip)
vip(fit)
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit)
library(vip)
vip(fit)
library(vip)
vip(fit)
imp <- vi(fit)
library(ggplot2)
ggplot(imp, aes(Variable, Importance)) +geom_col()
ggplot(imp, aes(Variable, Importance)) +geom_col() + coord_flip()
library(vip)
vip(fit)
vip.lm
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit)
?reoder
?rorder
?reorder
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit)
?reorder
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit)
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit)
library(vip)
vip(fit) + theme_bw()
library(vip)
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit) + theme_bw()
vip(fit, fill = "red") + theme_bw()
source('C:/Users/greenweb/Desktop/devel/vip/R/vip.R', echo=TRUE)
vip(fit, fill = "red") + theme_bw()
rm(vip.lm)
vip(fit, fill = "red") + theme_bw()
vip(fit, fill = aes_string(fill = "Importance")) + theme_bw()
vip(fit, fill = aes_string(fill = "Importance")) + theme_bw()
aes_string(fill = "Importance")
vip(fit, fill = 'aes_string(fill = "Importance")' + theme_bw()
)
vip(fit, fill = 'aes_string(fill = "Importance")') + theme_bw()
caret:::varImpDependencies("lm")
?mtcars
mtcars.lm <- lm(mpg ~ ., data = mtcars)
vip(mtcars.lm) + theme_light()
library(vip)
# Load the data
load("C:\\Users\\greenweb\\Desktop\\R code\\SmithJrawarticle.RData")
art <- DFArticles
class(art)
dim(art)
names(art)
# Write the raw text to individual files
for (i in 3:nrow(art)) {
# The first two contain no text?
file.conn<-file(paste0("C:\\Users\\greenweb\\Desktop\\R code\\articles\\article-", i, ".txt"))
writeLines(art$Text[i], file.conn)
close(file.conn)
}
# Load required packages
library(tidytext)
library(tm)
library(topicmodels)
# Create a document term matrix
art.vcorpus <- VCorpus(DirSource("C:\\Users\\greenweb\\Desktop\\R code\\articles"),
list(reader = readPlain))
art.dtm <- DocumentTermMatrix(art.vcorpus, control = list(stopwords = TRUE))
# Analyze
art.lda <- LDA(art.dtm, k = 2)
get_topics(art.lda)  # show which topic each document belongs to
?tm_map
names(art.vcorpus)
install.packages("pdp")
data(boston, package = "pdp")  # load the boston housing data
boston.lm <- lm(cmedv ~ ., data = boston)
vip(boston.lm)
library(vip)
# install.packages("pdp")
data(boston, package = "pdp")  # load the boston housing data
boston.lm <- lm(cmedv ~ ., data = boston)
vip(boston.lm)
caret:::varImpDependencies("rf")
importance(fit1)
